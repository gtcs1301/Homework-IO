(this["webpackJsonphomework-io"]=this["webpackJsonphomework-io"]||[]).push([[0],{58:function(e,t,n){e.exports=n(75)},74:function(e,t,n){},75:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),s=n(8),l=n.n(s),o=n(25),c=n(46),u=n.n(c),i=n(48),m=n.n(i),d=function(e){return r.a.createElement("header",{className:"navbar"},r.a.createElement("div",{className:"navbar-items"},r.a.createElement("div",{className:"navbar-name"},"CS1301 Homework IO\xa0",r.a.createElement("span",{role:"img","aria-label":"emoji"},"\ud83e\udd16")),r.a.createElement("div",{className:"navbar-space"}),r.a.createElement("div",{style:{display:"flex",transformOrigin:"center",transition:"0.3s ease-out",transform:"".concat(e.darkMode?"":"rotate(360deg)")}},e.darkMode?r.a.createElement(u.a,{className:"navbar-mode",onClick:function(){return e.toggleMode()},style:{transition:"0.3s"}}):r.a.createElement(m.a,{className:"navbar-mode",onClick:function(){return e.toggleMode()},style:{transition:"0.3s"}}))))},g=n(13),f=n(108),h=n(39),p=n.n(h),v=n(40),E=n.n(v),b=n(109),C=function(e){return r.a.createElement("div",{className:"function-card"},r.a.createElement("div",{className:"function-header"},r.a.createElement("h2",null,"Function: ",r.a.createElement("span",null,e.name)),0!==e.index&&e.index!==e.functionList.length-1?r.a.createElement(p.a,{className:"form-icons",style:{color:"red"},onClick:function(){return e.removeFunction(e.index)}}):r.a.createElement(r.a.Fragment,null),e.index===e.functionList.length-1?r.a.createElement(E.a,{className:"form-icons",style:{color:"green"},onClick:function(){return e.addFunction()}}):r.a.createElement(r.a.Fragment,null)),r.a.createElement("div",{className:"divider"}),r.a.createElement("form",{className:"function-card-form",noValidate:!0,autoComplete:"off",onSubmit:function(e){return e.preventDefault()}},r.a.createElement("div",{className:"function-name-field"},r.a.createElement("div",{className:"form-label"},r.a.createElement("h3",null,"Function Name:")),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement(f.a,{value:e.name,onChange:function(t){return e.setName(t,e.index)},label:"ex: magicSquares",variant:"outlined"})))),r.a.createElement("div",{className:"function-regular-field"},r.a.createElement("div",{className:"form-label"},r.a.createElement("h3",null,"Test Cases:")),r.a.createElement("div",{className:"input-list"},r.a.createElement("ul",null,e.regularCases.map((function(t,n){return r.a.createElement("li",{key:n},r.a.createElement(f.a,{value:t.testCase,onChange:function(t){return e.changeTestCase(t,!0,e.index,n)},label:"[arg1, arg2, . . . ]",variant:"outlined"}),r.a.createElement(f.a,{style:{marginLeft:"20px"},value:t.weight,onChange:function(t){return e.changeWeight(t,!0,e.index,n)},label:"weight (number)",variant:"outlined"}),0!==n&&n!==e.regularCases.length-1?r.a.createElement(p.a,{className:"form-icons",style:{color:"red"},onClick:function(){return e.removeTestCase(!0,e.index,n)}}):r.a.createElement(r.a.Fragment,null),n===e.regularCases.length-1?r.a.createElement(E.a,{className:"form-icons",style:{color:"green"},onClick:function(){return e.addTestCase(!0,e.index)}}):r.a.createElement(r.a.Fragment,null))}))))),r.a.createElement("div",{className:"function-edge-field"},r.a.createElement("div",{className:"form-label"},r.a.createElement("h3",null,"Edge Cases:")),r.a.createElement("ul",null,e.edgeCases.map((function(t,n){return r.a.createElement("li",{key:n},r.a.createElement(f.a,{value:t.testCase,onChange:function(t){return e.changeTestCase(t,!1,e.index,n)},label:"[arg1, arg2, . . . ]",variant:"outlined"}),r.a.createElement(f.a,{style:{marginLeft:"20px"},value:t.weight,onChange:function(t){return e.changeWeight(t,!1,e.index,n)},label:"weight (number)",variant:"outlined"}),0!==n&&n!==e.edgeCases.length-1?r.a.createElement(p.a,{className:"form-icons",style:{color:"red"},onClick:function(){return e.removeTestCase(!1,e.index,n)}}):r.a.createElement(r.a.Fragment,null),n===e.edgeCases.length-1?r.a.createElement(E.a,{className:"form-icons",style:{color:"green"},onClick:function(){return e.addTestCase(!1,e.index)}}):r.a.createElement(r.a.Fragment,null))})))),r.a.createElement("div",{className:"function-name-field"},r.a.createElement("div",{className:"form-label"},r.a.createElement("h3",null,"Return Problem:")),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement(b.a,{checked:e.returnProblem,onChange:function(){return e.toggleReturnProblem(e.index)}}))))))},w=n(107),y=n(49),_=n.n(y),x=n(50),N=function(){var e=Object(a.useState)([{name:"",returnProblem:!0,regularCases:[{testCase:"",weight:""}],edgeCases:[{testCase:"",weight:""}]}]),t=Object(o.a)(e,2),n=t[0],s=t[1],l=Object(a.useState)(""),c=Object(o.a)(l,2),u=c[0],i=c[1],m=Object(a.useState)(""),d=Object(o.a)(m,2),h=d[0],p=d[1],v=function(e){var t=Object(g.a)(n);t[e].returnProblem=!t[e].returnProblem,s(t)},E=function(e,t){var a=Object(g.a)(n);a[t].name=e.target.value,s(a)},b=function(e,t,a,r){var l=Object(g.a)(n),o=l[a];(t?o.regularCases:o.edgeCases)[r].testCase=e.target.value,s(l)},y=function(e,t,a,r){var l=Object(g.a)(n),o=l[a];(t?o.regularCases:o.edgeCases)[r].weight=e.target.value,s(l)},N=function(e,t){var a=Object(g.a)(n),r=a[t],l=e?r.regularCases:r.edgeCases;l[l.length-1].testCase&&l[l.length-1].weight?l.push({testCase:"",weight:""}):window.alert("Please enter a valid test case!"),s(a)},k=function(e,t,a){var r=Object(g.a)(n),l=r[t];(e?l.regularCases:l.edgeCases).splice(a,1),s(r)},F=function(){var e=Object(g.a)(n),t=e[e.length-1];t.name&&t.regularCases[0].testCase&&t.regularCases[0].weight?e.push({name:"",returnProblem:!0,regularCases:[{testCase:"",weight:""}],edgeCases:[{testCase:"",weight:""}]}):window.alert("Function must have a name and at least one test case!"),s(e)},O=function(e){var t=Object(g.a)(n);t.splice(e,1),s(t)};return r.a.createElement("div",{className:"function-list-container"},r.a.createElement("div",{className:"function-list"},r.a.createElement("div",{className:"function-header"},r.a.createElement("h2",null,"Homework Details:")),r.a.createElement("div",{className:"divider"}),r.a.createElement("div",{className:"function-name-field",style:{width:"100%"}},r.a.createElement("div",{className:"form-label",style:{display:"flex",alignItems:"center"}},r.a.createElement("h3",null,"HW #")),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement(f.a,{value:u,onChange:function(e){return i(e.target.value)},label:"ex: 07",variant:"outlined"})))),n.map((function(e,t){return r.a.createElement(C,{key:t,index:t,name:e.name,returnProblem:e.returnProblem,regularCases:e.regularCases,edgeCases:e.edgeCases,setName:E,changeTestCase:b,addTestCase:N,removeTestCase:k,addFunction:F,removeFunction:O,functionList:n,changeWeight:y,toggleReturnProblem:v})})),r.a.createElement("div",{className:"divider",style:{marginBottom:"50px"}}),r.a.createElement("div",{className:"footer"},r.a.createElement(w.a,{variant:"contained",component:"label",style:{height:"50px",width:"150px"}},h?"Received":"Upload",r.a.createElement("input",{type:"file",onChange:function(e){return function(e){var t=e.target.files[0],n=new FileReader;n.onload=function(){var e=n.result;p(e)},n.readAsText(t)}(e)},style:{display:"none"}})),r.a.createElement(w.a,{variant:"contained",color:"primary",component:"label",style:{marginLeft:"20px",height:"50px",width:"150px",marginBottom:"75px"},onClick:function(){return function(){var e=new _.a,t=u.padStart(2,"0");e.file("run_autograder","#!/usr/bin/env bash\n\n# Set up autograder files\n\ncp /autograder/submission/HW01.py /autograder/source/HW".concat(t,".py\n\ncd /autograder/source\n\npython3 run_tests.py > /autograder/results/results.json")),e.file("requirements.txt","gradescope-utils>=0.2.7\nsubprocess32\nmock"),e.file("run_tests.py","import unittest\nfrom gradescope_utils.autograder_utils.json_test_runner import JSONTestRunner\n\nif __name__ == '__main__':\n    suite = unittest.defaultTestLoader.discover('tests')\n    JSONTestRunner(visibility='visible').run(suite)"),e.file("setup.sh","#!/usr/bin/env bash\n\napt-get install -y python3 python3-pip python-dev\n\npip3 install -r /autograder/source/requirements.txt"),e.folder("tests").file("HW".concat(t,"_solution.py"),h);var a="# Author: Homework IO\n# Current: HW".concat(t,"\n\n# Fill out which HW you're working on\nimport HW").concat(t," as hw\nimport HW").concat(t,"_solution as sol\n\n# DO NOT TOUCH\n################################################################################\nimport unittest\nimport mock\nfrom gradescope_utils.autograder_utils.decorators import weight\nimport sys\nfrom contextlib import contextmanager\nfrom io import StringIO\n\n@contextmanager\ndef captured_output():\n    new_out, new_err = StringIO(), StringIO()\n    old_out, old_err = sys.stdout, sys.stderr\n    try:\n        sys.stdout, sys.stderr = new_out, new_err\n        yield sys.stdout, sys.stderr\n    finally:\n        sys.stdout, sys.stderr = old_out, old_err\n################################################################################\n\n# Fill out which HW you're working on\n\nclass TestHW").concat(t,'(unittest.TestCase):\n    def setUp(self):\n        pass\n\n# FOR REFERENCE ONLY\n################################################################################\n# Each test case should take the format below\n\n# REGULAR TEST CASE\n# @weight({number of points for this test case})\n# def test_{function name}_{test case number}(self):\n#     """{gradescope message}"""\n#     args = {list of arguments for the function}\n#     value = hw.{function call}\n#     expected = sol.{function call}\n#     self.assertEqual(value, expected)\n\n# HIDDEN EDGE CASES\n# @weight({number of points for this test case})\n# def test_{function name}_{test case number}(self):\n#     """{gradescope message}"""\n#     args = {list of arguments for the function}\n#     value = hw.{function call}\n#     expected = sol.{function call}\n#     self.assertTrue(value == expected)\n\n# Try to make around 3-4 normal cases and 1-2 edge cases per function\n# Be sure to change the weights of your test cases depending on how many test cases you have\n# Make the edge case worth not as much as the other test cases\n# Make sure all your test cases add up to 100 points and you indicate which test cases are edge cases\n# Any questions or suggestions can be directed to Arvin or Anthony!\n\n# DO NOT TOUCH\n################################################################################\n\n    def printProblems(self, hwFunc, solFunc, *args):\n        with captured_output() as (out, err):\n            with mock.patch(\'builtins.input\', side_effect=[*args]):\n                value = hwFunc()\n                hw_output = out.getvalue().strip()\n        with captured_output() as (out, err):\n            with mock.patch(\'builtins.input\', side_effect=[*args]):\n                expected = solFunc()\n                sol_output = out.getvalue().strip()\n        self.assertEqual(hw_output, sol_output)\n\n\n    def returnProblems(self, hwFunc, solFunc, *args):\n        value = hwFunc(*args)\n        expected = solFunc(*args)\n        self.assertEqual(value, expected)\n\n\n    def hiddenPrintProblems(self, hwFunc, solFunc, *args):\n        with captured_output() as (out, err):\n            with mock.patch(\'builtins.input\', side_effect=[*args]):\n                value = hwFunc()\n                hw_output = out.getvalue().strip()\n        with captured_output() as (out, err):\n            with mock.patch(\'builtins.input\', side_effect=[*args]):\n                expected = solFunc()\n                sol_output = out.getvalue().strip()\n        self.assertTrue(hw_output == sol_output)\n\n\n    def hiddenReturnProblems(self, hwFunc, solFunc, *args):\n        value = hwFunc(*args)\n        expected = solFunc(*args)\n        self.assertTrue(value == expected)\n\n################################################################################');n.forEach((function(e){var t=e.name,n=e.regularCases,r=e.edgeCases,s=e.returnProblem,l="",o=1,c=0,u=s?"Return":"Print";l+="    # Regular Test Cases\n",n.forEach((function(e){var n=e.testCase,a=e.weight;n&&a&&(l+="    @weight(".concat(a,")\n    def test_").concat(t,"_").concat(o,'(self):\n        """').concat(t,"() with ").concat(n.substring(1,n.length-1),'"""\n        args = ').concat(n,"\n        self.").concat(u.toLowerCase(),"Problems(hw.").concat(t,", sol.").concat(t,", *args)\n\n"),o+=1,c+=parseFloat(a))})),l+="    # Edge Cases\n",r.forEach((function(e){var n=e.testCase,a=e.weight;n&&a&&(l+="    @weight(".concat(a,")\n    def test_").concat(t,"_").concat(o,'(self):\n        """').concat(t,"() with ").concat(n.substring(1,n.length-1),'"""\n        args = ').concat(n,"\n        self.hidden").concat(u,"Problems(hw.").concat(t,", sol.").concat(t,", *args)\n\n"),o+=1,c+=parseFloat(a))}));var i="\n\n# ".concat(t," [").concat(c," points]\n");a+="".concat(i,"\n").concat(l)})),e.folder("tests").file("tests.py",a),e.generateAsync({type:"blob"}).then((function(e){Object(x.saveAs)(e,"HW".concat(t,"_Autograder.zip"))}))}()}},"Generate"))))},k=(n(74),function(){var e=(new Date).getHours(),t=Object(a.useState)(e<6||e>=18),n=Object(o.a)(t,2),s=n[0],l=n[1];return Object(a.useEffect)((function(){document.body.style.backgroundColor=s?"#1a191e":"#f1f5f7"})),r.a.createElement("div",{className:s?"ultra dark-mode":"ultra light-mode"},r.a.createElement(d,{darkMode:s,toggleMode:function(){l(!s)}}),r.a.createElement("div",{className:"navbar-offset-space"}),r.a.createElement(N,null))});l.a.render(r.a.createElement(k,null),document.getElementById("root"))}},[[58,1,2]]]);
//# sourceMappingURL=main.2b637809.chunk.js.map